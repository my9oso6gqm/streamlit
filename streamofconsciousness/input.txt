# 18:52 10-01-2024
Ascoltando https://youtube.com/watch?v=RF0HhrwIwp0

Non si capisce nulla, ecco perche' devo scrivere un blocco serio per il report delle operazioni.
''')

st.image('https://my9oso6gqm.github.io/doc/184410012024.png')

st.markdown(r'''
Non scrivo piu' il codice come funzioni per evitarmi blocchi di codice incastrati dalle dipendenze ma lo divido in celle jupyter. Ve lo metto qui.

```python
import pandas
import matplotlib.pyplot as plt
from ibapi.client import *
from ibapi.wrapper import *
import numpy as np
```

```python
# Qua e' diviso in classi e funzioni ma un blocco standard per interrogare ibkr e mettere tutto in un df da manipolare con gli algoritmi

class IBapi(EWrapper, EClient):
    def __init__(self):
        EClient.__init__(self, self) 
        self.data = []
        
    def nextValidId(self, orderId: int):
        
        mycontract = Contract()
        mycontract.symbol = "AAPL"
        mycontract.secType = "STK"
        mycontract.exchange = "SMART"
        mycontract.currency = "USD"        
        self.reqMarketDataType(3)    
   
        self.reqHistoricalData(orderId, mycontract, '20240105 15:59:00 US/Eastern', '1 D', '1 min', 'TRADES', 0, 1, 0, [])

    def historicalData(self, reqId, bar):
        self.data.append([bar.date, bar.close])
        app.disconnect()

app = IBapi()
app.connect('127.0.0.1', 7497, 123)
app.run()

df = pandas.DataFrame(app.data, columns=['DateTime', 'Close'])
```

$$
\frac{P_1+P_2+P_n}{n}
$$

```python
df['media mobile 1'] = df['Close'].rolling(window = 10, min_periods = 1, center = False).mean()
df['media mobile 2'] = df['Close'].rolling(window = 20, min_periods = 1, center = False).mean()
```

```python
df['Position'] = np.where(df['media mobile 1'] > df['media mobile 2'], 1, -1)
```

```python
# Un modo furbo per il plot ^^
ax = df.plot(secondary_y='Position', figsize=(30, 30))
```
